{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchFeild","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,G,kBAAK,SAACC,GAChB,OACC,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCJTC,EAAS,SAACR,GACnB,OACI,sBAAKC,UAAU,YAAf,UAA4BQ,QAAQC,IAAIV,GAEpCA,EAAMW,SAASC,KAAI,SAAAR,GAAO,OAE1B,aADA,CACC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCPlBQ,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACnB,uBAAOC,KAAK,SACZF,YAAcA,EACdG,SAAUF,MCqCCG,E,kDArCb,aAAc,IAAD,8BACX,gBAaFH,aAAa,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAbpC,EAAKC,MAAM,CACVb,SAAS,GACTU,YAAY,IAJF,E,gEAQO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OACZA,EAASC,UACRF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,+BAK/B,IAAD,EACsBC,KAAKN,MAA3Bb,EADA,EACAA,SAASU,EADT,EACSA,YACVU,EAAiBpB,EAASqB,QAAO,SAAA5B,GAAO,OAC5CA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAKhC,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CAAWa,YAAY,kBACtBC,aAAce,KAAKf,eAEpB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA7BRI,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d877cec5.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\nexport const Card=(props)=>{\n   return (\n    <div className='card-container'>\n    <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n    </div>);\n}\n","import React from 'react';\nimport './card-list.styles.css';\nimport {Card} from '../card/card.component';\nexport const CardList=(props)=>{\n    return (\n        <div className='card-list'>{console.log(props)}\n        {\n            props.monsters.map(monster=>\n            //   <h1 key={monster.id}>{monster.name}</h1>\n            <Card key={monster.id} monster={monster}/>\n            )\n          }\n        </div>)};","import './search-box.styles.css';\nimport React from 'react';\nexport const SearchBox=({placeholder,handleChange})=>(\n    <input type='search' \n    placeholder= {placeholder}\n    onChange={handleChange}/>\n)","import './App.css';\nimport React from 'react';\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component';\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={\n     monsters:[],\n     searchFeild:''\n    }\n    //this.handleChange=this.handleChange.bind(this);\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>\n      response.json())\n      .then(users=>this.setState({monsters:users}));\n  }\n  handleChange=(e)=>{\n    this.setState({searchFeild:e.target.value});\n  }\n  render() {\n    const {monsters,searchFeild}=this.state;\n    const filteredMonsters=monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchFeild.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox placeholder='search monsters'\n       handleChange={this.handleChange}\n      />\n      <CardList monsters={filteredMonsters}>\n      \n      </CardList>\n     \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}